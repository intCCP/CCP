CREATE OR REPLACE PACKAGE BODY MCRE_OWN.PKG_MCRE0_GESTIONE_TAVOLI AS

  /*
    Chiamata dal job ad eccezione ricevuta
  */
  FUNCTION SET_ESITO_KO_CONVOCAZ_AUTO (
    P_COD_ABI_CARTOLARIZZATO  IN T_MCRE0_APP_CONV_AUTO.COD_ABI_CARTOLARIZZATO%TYPE,
    P_COD_NDG                 IN T_MCRE0_APP_CONV_AUTO.COD_NDG%TYPE,
    P_COD_SNDG                IN T_MCRE0_APP_CONV_AUTO.COD_SNDG%TYPE,
    P_ID_UTENTE               IN T_MCRE0_APP_CONV_AUTO.ID_UTENTE%TYPE
  )
  RETURN NUMBER IS
    C_NOME CONSTANT VARCHAR2(100) := 'PKG_MCRE0_GESTIONE_TAVOLI.SET_ESITO_KO_CONVOCAZ_AUTO';
    P_NOTE T_MCREI_WRK_AUDIT_APPLICATIVO.NOTE%TYPE;
  BEGIN
    P_NOTE := 'Controllo parametri in ingresso: ' ||
      P_COD_ABI_CARTOLARIZZATO || ', ' || P_COD_NDG || ', ' || P_COD_SNDG || ', ' || P_ID_UTENTE;

    IF (P_COD_ABI_CARTOLARIZZATO IS NULL OR P_COD_NDG IS NULL OR P_COD_SNDG IS NULL OR P_ID_UTENTE IS NULL) THEN
      RAISE_APPLICATION_ERROR(-20666, 'Null parameter');
    ELSE
      P_NOTE := 'INSERT T_MCRE0_APP_CONV_AUTO setta esito negativo job convocazione tavoli:' ||
        P_COD_ABI_CARTOLARIZZATO || ', ' || P_COD_NDG || ', ' || P_COD_SNDG || ', ' || P_ID_UTENTE;

      INSERT INTO T_MCRE0_APP_CONV_AUTO( COD_ABI_CARTOLARIZZATO, COD_NDG, COD_SNDG, ID_UTENTE, DTA_INS )
      VALUES ( P_COD_ABI_CARTOLARIZZATO, P_COD_NDG, P_COD_SNDG, P_ID_UTENTE, sysdate );
    END IF;

    PKG_MCRE0_AUDIT.LOG_APP(C_NOME, PKG_MCRE0_AUDIT.C_DEBUG, SQLCODE, SQLERRM, P_NOTE, NULL);
    RETURN 1; --OK

    EXCEPTION WHEN OTHERS THEN
      PKG_MCRE0_AUDIT.LOG_APP(C_NOME, PKG_MCRE0_AUDIT.C_ERROR, SQLCODE, SQLERRM, P_NOTE, NULL);
      RETURN 0; --KO

  END SET_ESITO_KO_CONVOCAZ_AUTO;

  /*
    Chiamata da interfaccia web a convocazione avvenuta
  */
  FUNCTION SET_ESITO_OK_CONVOCAZ_MAN (
    P_COD_ABI_CARTOLARIZZATO  IN T_MCRE0_APP_CONV_AUTO.COD_ABI_CARTOLARIZZATO%TYPE,
    P_COD_NDG                 IN T_MCRE0_APP_CONV_AUTO.COD_NDG%TYPE,
    P_COD_SNDG                IN T_MCRE0_APP_CONV_AUTO.COD_SNDG%TYPE,
    P_ID_UTENTE               IN T_MCRE0_APP_CONV_AUTO.ID_UTENTE%TYPE
  )
  RETURN NUMBER IS
    C_NOME CONSTANT VARCHAR2(100) := 'PKG_MCRE0_GESTIONE_TAVOLI.SET_ESITO_OK_CONVOCAZ_MAN';
    P_NOTE T_MCREI_WRK_AUDIT_APPLICATIVO.NOTE%TYPE;
  BEGIN
    P_NOTE := 'Controllo parametri in ingresso: ' || P_COD_ABI_CARTOLARIZZATO || ', ' || P_COD_NDG;

    IF ( P_COD_ABI_CARTOLARIZZATO IS NULL OR P_COD_NDG IS NULL ) THEN
      RAISE_APPLICATION_ERROR(-20666, 'Null parameter');
    ELSE
      P_NOTE := 'DELETE T_MCRE0_APP_CONV_AUTO setta esito positivo convocazione tavoli manuale:' ||
        P_COD_ABI_CARTOLARIZZATO || ', ' || P_COD_NDG;

      DELETE FROM T_MCRE0_APP_CONV_AUTO WHERE COD_ABI_CARTOLARIZZATO = P_COD_ABI_CARTOLARIZZATO and COD_NDG = P_COD_NDG;
    END IF;

    PKG_MCRE0_AUDIT.LOG_APP(C_NOME, PKG_MCRE0_AUDIT.C_DEBUG, SQLCODE, SQLERRM, P_NOTE, NULL);
    RETURN 1; --OK

    EXCEPTION WHEN OTHERS THEN
      PKG_MCRE0_AUDIT.LOG_APP(C_NOME, PKG_MCRE0_AUDIT.C_ERROR, SQLCODE, SQLERRM, P_NOTE, NULL);
      RETURN 0; --KO
  END SET_ESITO_OK_CONVOCAZ_MAN;

  /*
    Chiamata come prima operazione del job per eliminare le posizioni dalla tabella manuale
    se la posizione non e' piu' in PT
  */
  FUNCTION CLEAN_POS_NON_PT
  RETURN NUMBER IS
    C_NOME CONSTANT VARCHAR2(100) := 'PKG_MCRE0_GESTIONE_TAVOLI.CLEAN_POS_NON_PT';
    P_NOTE T_MCRE0_WRK_AUDIT_APPLICATIVO.NOTE%TYPE;
  BEGIN
    P_NOTE := 'DELETE T_MCRE0_APP_CONV_AUTO pulizia posizioni non piu in PT';

    DELETE FROM
      T_MCRE0_APP_CONV_AUTO
    WHERE
      (T_MCRE0_APP_CONV_AUTO.COD_ABI_CARTOLARIZZATO, T_MCRE0_APP_CONV_AUTO.COD_NDG)
      NOT IN (
        select
          V_MCRE0_APP_PT_POS_DA_CONV.COD_ABI_CARTOLARIZZATO, V_MCRE0_APP_PT_POS_DA_CONV.COD_NDG
        FROM
          V_MCRE0_APP_PT_POS_DA_CONV
      );

    PKG_MCRE0_AUDIT.LOG_APP(C_NOME, PKG_MCRE0_AUDIT.C_DEBUG, SQLCODE, SQLERRM, P_NOTE, NULL);
    RETURN 1; --OK

    EXCEPTION WHEN OTHERS THEN
      PKG_MCRE0_AUDIT.LOG_APP(C_NOME, PKG_MCRE0_AUDIT.C_ERROR, SQLCODE, SQLERRM, P_NOTE, NULL);
      RETURN 0; --KO
  END CLEAN_POS_NON_PT;

END PKG_MCRE0_GESTIONE_TAVOLI;
/


CREATE SYNONYM MCRE_APP.PKG_MCRE0_GESTIONE_TAVOLI FOR MCRE_OWN.PKG_MCRE0_GESTIONE_TAVOLI;


CREATE SYNONYM MCRE_USR.PKG_MCRE0_GESTIONE_TAVOLI FOR MCRE_OWN.PKG_MCRE0_GESTIONE_TAVOLI;


GRANT EXECUTE, DEBUG ON MCRE_OWN.PKG_MCRE0_GESTIONE_TAVOLI TO MCRE_USR;

